<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">DebugSingle</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{7565E6F1-37E7-41D3-9C38-FC0CC07A5472}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Ode.Net</RootNamespace>
    <AssemblyName>Ode.Net</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'DebugSingle|AnyCPU' ">
    <Precision>Single</Precision>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\DebugSingle\</OutputPath>
    <DefineConstants>TRACE;DEBUG;SINGLE_PRECISION</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'ReleaseSingle|AnyCPU' ">
    <Precision>Single</Precision>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\ReleaseSingle\</OutputPath>
    <DefineConstants>TRACE;SINGLE_PRECISION</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\ReleaseSingle\Ode.Net.xml</DocumentationFile>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <BuildPackage>true</BuildPackage>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'DebugDouble|AnyCPU' ">
    <Precision>Double</Precision>
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\DebugDouble\</OutputPath>
    <DefineConstants>TRACE;DEBUG;DOUBLE_PRECISION</DefineConstants>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>ManagedMinimumRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'ReleaseDouble|AnyCPU' ">
    <Precision>Double</Precision>
    <OutputPath>bin\ReleaseDouble\</OutputPath>
    <DefineConstants>TRACE;DOUBLE_PRECISION</DefineConstants>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DocumentationFile>bin\ReleaseDouble\Ode.Net.xml</DocumentationFile>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>ManagedMinimumRules.ruleset</CodeAnalysisRuleSet>
    <BuildPackage>true</BuildPackage>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Body.cs" />
    <Compile Include="Collision\BoundingBox.cs" />
    <Compile Include="Collision\Box.cs" />
    <Compile Include="Collision\Capsule.cs" />
    <Compile Include="Collision\ContactInfo.cs" />
    <Compile Include="Collision\ContactGenerationFlags.cs" />
    <Compile Include="Collision\ContactGeom.cs" />
    <Compile Include="Collision\ContactModes.cs" />
    <Compile Include="Collision\Convex.cs" />
    <Compile Include="Collision\Cylinder.cs" />
    <Compile Include="Collision\Geom.cs" />
    <Compile Include="Collision\GeomClass.cs" />
    <Compile Include="Collision\HashSpace.cs" />
    <Compile Include="Collision\Heightfield.cs" />
    <Compile Include="Collision\HeightfieldData.cs" />
    <Compile Include="Collision\Plane.cs" />
    <Compile Include="Collision\QuadTreeSpace.cs" />
    <Compile Include="Collision\AxisOrder.cs" />
    <Compile Include="Collision\Ray.cs" />
    <Compile Include="Collision\SimpleSpace.cs" />
    <Compile Include="Collision\Space.cs" />
    <Compile Include="Collision\Sphere.cs" />
    <Compile Include="Collision\SurfaceParameters.cs" />
    <Compile Include="Collision\SweepAndPruneSpace.cs" />
    <Compile Include="Collision\TriMesh.cs" />
    <Compile Include="Joints\AngularMotor.cs" />
    <Compile Include="Joints\Ball.cs" />
    <Compile Include="Joints\Contact.cs" />
    <Compile Include="Joints\DoubleBall.cs" />
    <Compile Include="Joints\DoubleHinge.cs" />
    <Compile Include="Joints\Fixed.cs" />
    <Compile Include="Joints\Hinge.cs" />
    <Compile Include="Joints\Hinge2.cs" />
    <Compile Include="Joints\Joint.cs" />
    <Compile Include="Joints\JointFeedback.cs" />
    <Compile Include="Joints\JointGroup.cs" />
    <Compile Include="Joints\JointLimitMotor.cs" />
    <Compile Include="Joints\JointType.cs" />
    <Compile Include="Joints\LinearMotor.cs" />
    <Compile Include="Joints\Null.cs" />
    <Compile Include="Joints\Piston.cs" />
    <Compile Include="Joints\Plane2D.cs" />
    <Compile Include="Joints\PrismaticRotoide.cs" />
    <Compile Include="Joints\PrismaticUniversal.cs" />
    <Compile Include="Joints\Slider.cs" />
    <Compile Include="Joints\Transmission.cs" />
    <Compile Include="Joints\RelativeOrientation.cs" />
    <Compile Include="Joints\Universal.cs" />
    <Compile Include="Mass.cs" />
    <Compile Include="Matrix3.cs" />
    <Compile Include="Native\collision.cs" />
    <Compile Include="Native\common.cs" />
    <Compile Include="Native\dTriMeshDataID.cs" />
    <Compile Include="Native\dHeightfieldDataID.cs" />
    <Compile Include="Native\dSpaceID.cs" />
    <Compile Include="Native\dJointFeedbackHandle.cs" />
    <Compile Include="Native\dJointGroupID.cs" />
    <Compile Include="Native\dJointID.cs" />
    <Compile Include="Native\dGeomID.cs" />
    <Compile Include="Native\dBodyID.cs" />
    <Compile Include="Native\dWorldID.cs" />
    <Compile Include="Native\error.cs" />
    <Compile Include="Native\mass.cs" />
    <Compile Include="Native\objects.cs" />
    <Compile Include="Native\odeinit.cs" />
    <Compile Include="Native\types.cs" />
    <Compile Include="Native\utils.cs" />
    <Compile Include="Engine.cs" />
    <Compile Include="OdeException.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Quaternion.cs" />
    <Compile Include="Collision\TriMeshData.cs" />
    <Compile Include="Types.cs" />
    <Compile Include="Vector3.cs" />
    <Compile Include="Vector4.cs" />
    <Compile Include="WorldStepMemoryManager.cs" />
    <Compile Include="WorldStepMemoryReservationPolicy.cs" />
    <Compile Include="World.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="NuGet\build\net45\Ode.Net.targets" />
    <None Include="Ode.Net.nuspec" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
  <Target Name="BeforeBuild" Condition="'$(Configuration)' == 'ReleaseSingle' Or '$(Configuration)' == 'ReleaseDouble'">
    <ItemGroup Label="single" Condition="'$(Precision)' == 'Single'">
      <CopyDll32 Include="$(MSBuildThisFileDirectory)../ode/Win32/vc11/Release/ode_single.dll" />
    </ItemGroup>
    <ItemGroup Label="single" Condition="'$(Precision)' == 'Single'">
      <CopyDll64 Include="$(MSBuildThisFileDirectory)../ode/x64/vc11/Release/ode_single.dll" />
    </ItemGroup>
    <ItemGroup Label="double" Condition="'$(Precision)' == 'Double'">
      <CopyDll32 Include="$(MSBuildThisFileDirectory)../ode/Win32/vc11/Release/ode_double.dll" />
    </ItemGroup>
    <ItemGroup Label="double" Condition="'$(Precision)' == 'Double'">
      <CopyDll64 Include="$(MSBuildThisFileDirectory)../ode/x64/vc11/Release/ode_double.dll" />
    </ItemGroup>
    <Copy SourceFiles="@(CopyDll32)" DestinationFolder="$(MSBuildThisFileDirectory)../ode/build/Win32/vc11" SkipUnchangedFiles="true" UseHardlinksIfPossible="true">
      <Output TaskParameter="DestinationFiles" PropertyName="DestinationFiles" />
      <Output TaskParameter="DestinationFiles" ItemName="DestinationFiles" />
      <Output TaskParameter="CopiedFiles" PropertyName="CopiedFiles" />
      <Output TaskParameter="CopiedFiles" ItemName="CopiedFiles" />
    </Copy>
    <Copy SourceFiles="@(CopyDll64)" DestinationFolder="$(MSBuildThisFileDirectory)../ode/build/x64/vc11" SkipUnchangedFiles="true" UseHardlinksIfPossible="true">
      <Output TaskParameter="DestinationFiles" PropertyName="DestinationFiles" />
      <Output TaskParameter="DestinationFiles" ItemName="DestinationFiles" />
      <Output TaskParameter="CopiedFiles" PropertyName="CopiedFiles" />
      <Output TaskParameter="CopiedFiles" ItemName="CopiedFiles" />
    </Copy>
  </Target>
  <Target Name="RemoveBuildDirectory" DependsOnTargets="BuildPackage">
    <ItemGroup>
      <CleanDirs Include="$(MSBuildThisFileDirectory)../ode/build" />
    </ItemGroup>
    <RemoveDir Directories="@(CleanDirs)" />
  </Target>
  <PropertyGroup>
    <BuildDependsOn Condition="$(BuildPackage) == 'true'">
      $(BuildDependsOn);
      RemoveBuildDirectory;
    </BuildDependsOn>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>